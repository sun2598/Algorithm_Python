'''
회의실 배정(그리디)

한 개의 회의실이 있는데 이를 사용하고자 하는 n개의 회의들에 대하여 회의실 사용표를 만들려고 한다. 
각 회의에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 최대수의 회의를 찾아라. 
단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.

▣ 입력설명
첫째 줄에 회의의 수 n(1<=n<=100,000)이 주어진다. 
둘째 줄부터 n+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다.

▣ 출력설명
첫째 줄에 최대 사용할 수 있는 회의 수를 출력하여라.

▣ 입력예제 1 
5
1 4
2 3
3 5
4 6
5 7

▣ 출력예제 1 
3

예제설명
(2, 3), (3, 5), (5, 7)이 회의실을 이용할 수 있다.
'''

n = int(input())
meeting = [list(map(int, input().split())) for _ in range(n)]
meeting.sort(key=lambda x : (x[1], x[0])) # x[1](종료시간) 기준 오름차순으로 정렬, 같다면 x[0](시작시간) 기준 오름차순으로 정렬 ⭐️

# < sort() >
# -> 원본을 변형시켜 정렬
# 1. reverse : reverse=False(기본값-오름차순), reverse=True(내림차순)
# 예) num_list.sort(reverse=True)
# 2. key : key(함수)를 기준으로 정렬. (기본값-오름차순)
# 예) meeting.sort(key=lambda x : (x[1], x[0]))
# < sorted() >
# -> 정렬된 결과를 반환. 원형을 변형시키지 않는다.

# 끝나는 시간 기준으로 정렬!
# [2, 3]    종료시간이 3 -> 시작시간이 3 이후인 회의 찾아야함
#  1, 4
# [3, 5]    종료시간이 5 -> 시작시간이 5 이후인 회의 찾아야함
#  4, 6
# [5, 7]    

end = 0 # 각 회의가 끝나는 시간
answer = 0 # 최대 회의 수

for s, e in meeting: # 각 하위 리스트가 차례대로 s와 e에 할당 ([2, 3]이라면 s=2, e=3)
    if s >= end:
        end = e # 회의 끝나는 시간 갱신
        answer += 1

print(answer)