'''
침몰하는 타이타닉(그리디)

유럽에서 가장 유명했던 유람선 타이타닉이 침몰하고 있습니다. 유람선에는 N명의 승객이 타고 있습니다. 
구명보트를 타고 탈출해야 하는데 타이타닉에 있는 구명보트는 2명 이하로만 탈 수 있으며, 
보트 한 개에 탈 수 있는 총 무게도 M kg 이하로 제한되어 있습니다.
N명의 승객 몸무게가 주어졌을 때 승객 모두가 탈출하기 위한 구명보트의 최소개수를 출력하는 프로그램을 작성하세요.

▣ 입력설명
첫째 줄에 자연수 N(5<=N<=1000)과 M(70<=M<=250)이 주어집니다.
두 번째 줄에 N개로 구성된 몸무게 수열이 주어집니다. 몸무게는 50이상 150이하입니다. 
각 승객의 몸무게는 M을 넘지는 않습니다. 즉 탈출을 못하는 경우는 없습니다.

▣ 출력설명
첫째 줄에 구명보트의 최소 개수를 출력합니다.

▣ 입력예제 1
5 140
90 50 70 100 60

▣ 출력예제 1 
3
'''

n, m = map(int, input().split())
a = list(map(int, input().split()))
a.sort()

#===========================================================
# <나의 풀이>

# 오름차순 정렬
#     lt          rt
# a | 50 60 70 90 100   -> 50 + 100 > 140(무게 초과) -> rt -= 1 (100은 혼자 타야함)

#     lt       rt
# a | 50 60 70 90 100   -> 50 + 90 = 140(가능한 무게) -> lt += 1, rt -= 1

lt = 0 # 두 명을 태우려고 할때 가벼운 쪽
rt = n-1 # 두 명을 태우려고 할때 무거운 쪽
answer = 0 # 구명보트의 최소 개수

while lt <= rt:
    if a[lt] + a[rt] <= m:
        answer += 1
        lt += 1
        rt -= 1
    else: # a[lt] + a[rt] > m
        answer += 1
        rt -= 1

print(answer)

#===========================================================
# <강의 풀이>

# 1. deque (Double-Ended Queue) ("덱"이라고 읽음)
# - from collections import deque 로 임포트
# - 양 끝에서 데이터를 추가하거나 제거할 때 효율적
# - popleft()로 왼쪽에서 데이터를 제거 (리스트로 pop(0)을 사용하면 성능저하. 이걸 추천)
# - 큐(queue)처럼 FIFO 방식일수도,
#   스택(stack)처럼 LIFO 방식일수도 있음

# 2. queue ("큐"라고 읽음)
# - queue의 종류로 Queue, LifoQueue, PriorityQueue 등이 있음
# - 주로 멀티스레딩(multithreading)과 멀티프로세싱(multiprocessing) 환경에서 스레드 간 데이터 공유 및 동기화를 위해 사용
# - 일반적으로 FIFO 방식

from collections import deque
a = deque(a)

# a | 50 60 70 90 100

# a | 50 60 70 90

# a | 60 70

cnt = 0

while a: # a가 True인 동안 (비어있지 않는 동안)
    if len(a) == 1: # 승객이 한 명 남았을 때
        cnt += 1 # 해당 승객은 혼자 타야 함
        break # 반복문 종료
    if a[0] + a[-1] > m: # 가장 가벼운 승객과 무거운 승객의 몸무게 합이 제한보다 크면
        a.pop() # 가장 무거운 승객을 보트에 태움
        cnt += 1
    else: # 제한보다 작으면
        # 가장 가벼운 승객과 무거운 승객을 같이 태움
        a.popleft() # pop(0)대신 이거 추천! (deque 사용시)
        a.pop()
        cnt += 1

print(cnt)