'''
후위표기식 만들기

중위표기식이 입력되면 후위표기식으로 변환하는 프로그램을 작성하세요.
중위표기식은 우리가 흔히 쓰는 표현식입니다. 즉 3+5 와 같이 연산자가 피연산자 사이에 있으면 중위표기식입니다.
후위표기식은 35+ 와 같이 연산자가 피연산자 뒤에 있는 표기식입니다.
예를 들어 중위표기식이 3+5*2 를 후위표기식으로 표현하면 352*+ 로 표현됩니다.
만약 다음과 같이 연산 최우선인 괄호가 표현된 식이라면
(3+5)*2 이면 35+2* 로 바꾸어야 합니다.
※ 후위 표기식이 이해가 안되면 구글링으로 공부해보는 것도 좋습니다.

▣ 입력설명
첫 줄에 중위표기식이 주어진다. 길이는 100을 넘지 않는다. 식은 1~9의 숫자와 +, -, *, /, (, ) 연산자로만 이루어진다.

▣ 출력설명 
후위표기식을 출력한다.

▣ 입력예제 1 
3+5*2/(7-2)

▣ 출력예제 1 
352*72-/+

▣ 입력예제 2 
3*(5+2)-9

▣ 출력예제 2 
352+*9-
'''

# <중위 표기법 -> 후위 표기법 변환>

#   1) 피연산자가 들어오면 바로 출력한다.
#   2) 연산자가 들어오면 자기보다 우선순위가 높거나 같은 것들을 빼고 자신을 스택에 담는다. 
#   3) 여는 괄호 '('를 만나면 무조건 스택에 담는다. 
#   4) 닫는 괄호 ')'를 만나면 '('를 만날 때까지 스택에서 출력한다. 

# 가장 중요한 것은 현재 처리중인 연산자와 스택에 있는 연산자의 우선순위를 이용한 처리 입니다. 

# 1. 현재 처리 중인 연산자의 우선순위가 스택에 있는 연산자의 우선순위보다 낮을 때  
# 예를들어) 처리중인 연산자: + or - ,  스택에있는 연산자: * or / 일 때 
# => 스택에 있는 연산자를 pop 해서 출력 후 처리 중인 연산자를 push 합니다.

# 2. 현재 처리 중인 연산자의 우선순위가 스택에 있는 연산자의 우선순위보다 클 때
# 예를들어) 처리중인 연산자: * or / , 스택에 있는 연산자: +, - 일 때
# => 현재 처리 중인 연산자를 그냥 push합니다.

# 3. 현재 처리중인 연산자의 우선순위와 스택에 있는 연산자의 우선순위가 같을 때
# 예를들어) 처리중인 연산자: +, 스택에 있는 연산자: - 일 때
# => 1번 경우와 똑같이 처리한다.

a = input()        # 중위표기식 입력 받기
stack = []         # 연산자를 저장할 스택
answer = ''        # 후위표기식을 저장할 변수

# 중위표기식 문자열을 순회
for x in a:
    if x.isdecimal():  # 숫자인 경우 바로 출력
        answer += x
    else:
        if x == '(':
            stack.append(x)
        elif x == '*' or x == '/':
            while stack and (stack[-1] == '*' or stack[-1] == '/'): # 스택의 top에 있는 연산자가 '*' 또는 '/'인 경우 pop하여 출력
                answer += stack.pop()
            stack.append(x)  # 현재 연산자를 스택에 push
        elif x == '+' or x == '-':
            while stack and stack[-1] != '(': # 스택의 top에 있는 연산자가 '('가 아닌 경우 pop하여 출력
                answer += stack.pop()
            stack.append(x)  # 현재 연산자를 스택에 push
        elif x == ')':
            while stack and stack[-1] != '(': # 스택의 top에 있는 연산자가 '('가 아닌 경우 pop하여 출력
                answer += stack.pop()
            stack.pop()  # '('를 pop하여 제거

# 스택에 남아 있는 연산자들을 모두 출력
while stack:
    answer += stack.pop()

print(answer)  # 후위표기식 출력

'''
입력: 3+5*2/(7-2)
전위표기식             스택                             후위표기식
'3'                 []                              '3'
'+'                 ['+']
'5'                 ['+']                           '35'
'*'                 ['+', '*']
'2'                 ['+', '*']                      '352'
'/'                 ['+', '*', '/']
'('                 ['+', '*', '/', '(']
'7'                 ['+', '*', '/', '(']            '3527'
'-'                 ['+', '*', '/', '(', '-']
'2'                 ['+', '*', '/', '(', '-']       '35272'
')'                 ['+', '*', '/']                 '35272-'
                    ['+', '*']                      '35272-'
                    ['+']                           '35272-/'
                    []                              '35272-/*+'
'''
